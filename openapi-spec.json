{
  "openapi": "3.0.0",
  "info": {
    "title": "API de Vendas para Substitutiva de W.W.W",
    "version": "1.0.0",
    "description": "Esta é uma API de exemplo para gerenciar clientes, produtos e vendas, usando Node.js, Express e SQLite (módulo nativo experimental)."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Servidor de Desenvolvimento Local"
    }
  ],
  "tags": [
    {
      "name": "Clientes",
      "description": "Gerenciamento de clientes"
    },
    {
      "name": "Produtos",
      "description": "Gerenciamento de produtos"
    },
    {
      "name": "Vendas",
      "description": "Gerenciamento de vendas"
    }
  ],
  "paths": {
    "/clientes": {
      "get": {
        "summary": "Lista todos os clientes",
        "tags": ["Clientes"],
        "responses": {
          "200": {
            "description": "Lista de clientes recuperada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cliente"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Cria um novo cliente",
        "tags": ["Clientes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string",
                    "description": "Nome do cliente."
                  }
                },
                "required": ["nome"],
                "example": {
                  "nome": "Novo Cliente Exemplo"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cliente criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cliente"
                }
              }
            }
          },
          "400": {
            "description": "Nome do cliente é obrigatório ou inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "O nome do cliente é obrigatório." }
              }
            }
          },
          "500": {
            "description": "Falha ao inserir o cliente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "Falha ao inserir o cliente." }
              }
            }
          }
        }
      }
    },
    "/clientes/{id}": {
      "get": {
        "summary": "Busca um cliente por ID",
        "tags": ["Clientes"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID do cliente a ser buscado."
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cliente"
                }
              }
            }
          },
          "400": {
            "description": "ID inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "ID inválido. Deve ser um número." }
              }
            }
          },
          "404": {
            "description": "Cliente não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "Cliente não encontrado" }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualiza um cliente existente",
        "tags": ["Clientes"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID do cliente a ser atualizado."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string",
                    "description": "Novo nome do cliente."
                  }
                },
                "required": ["nome"],
                "example": {
                  "nome": "Nome Atualizado"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cliente atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Cliente atualizado com sucesso." }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID inválido ou nome obrigatório.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "examples": {
                  "id_invalido": { "value": { "message": "ID inválido. Deve ser um número." } },
                  "nome_obrigatorio": { "value": { "message": "O nome do cliente é obrigatório." } }
                }
              }
            }
          },
          "404": {
            "description": "Cliente não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "Cliente não encontrado" }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deleta um cliente",
        "tags": ["Clientes"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID do cliente a ser deletado."
          }
        ],
        "responses": {
          "204": {
            "description": "Cliente deletado com sucesso (No Content)."
          },
          "400": {
            "description": "ID inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "ID inválido. Deve ser um número." }
              }
            }
          },
          "404": {
            "description": "Cliente não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "Cliente não encontrado" }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/clientes/buscar": {
      "get": {
        "summary": "Busca clientes por nome (parcial)",
        "tags": ["Clientes"],
        "parameters": [
          {
            "in": "query",
            "name": "nome",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Nome ou parte do nome do cliente para busca."
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de clientes encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cliente"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parâmetro \"nome\" é obrigatório.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "Parâmetro \"nome\" é obrigatório para a busca." }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/produtos": {
      "get": {
        "summary": "Lista todos os produtos",
        "tags": ["Produtos"],
        "responses": {
          "200": {
            "description": "Lista de produtos recuperada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Produto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Cria um novo produto",
        "tags": ["Produtos"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string",
                    "description": "Nome do produto."
                  },
                  "preco": {
                    "type": "number",
                    "format": "float",
                    "description": "Preço do produto."
                  },
                  "estoque": {
                    "type": "integer",
                    "description": "Quantidade em estoque."
                  }
                },
                "required": ["nome", "preco", "estoque"],
                "example": {
                  "nome": "Smartphone",
                  "preco": 1999.99,
                  "estoque": 50
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Produto criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Produto"
                }
              }
            }
          },
          "400": {
            "description": "Dados do produto inválidos ou ausentes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "examples": {
                  "campos_obrigatorios": { "value": { "message": "Nome, preço e estoque são obrigatórios." } },
                  "nome_invalido": { "value": { "message": "Nome deve ser uma string não vazia." } },
                  "preco_invalido": { "value": { "message": "Preço deve ser um número maior que zero." } },
                  "estoque_invalido": { "value": { "message": "Estoque deve ser um número inteiro não negativo." } }
                }
              }
            }
          },
          "500": {
            "description": "Falha ao inserir o produto.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "Falha ao inserir o produto." }
              }
            }
          }
        }
      }
    },
    "/produtos/{id}": {
      "get": {
        "summary": "Busca um produto por ID",
        "tags": ["Produtos"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID do produto a ser buscado."
          }
        ],
        "responses": {
          "200": {
            "description": "Produto encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Produto"
                }
              }
            }
          },
          "400": {
            "description": "ID inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "ID inválido. Deve ser um número." }
              }
            }
          },
          "404": {
            "description": "Produto não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "Produto não encontrado" }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualiza um produto existente",
        "tags": ["Produtos"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID do produto a ser atualizado."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string",
                    "description": "Novo nome do produto."
                  },
                  "preco": {
                    "type": "number",
                    "format": "float",
                    "description": "Novo preço do produto."
                  },
                  "estoque": {
                    "type": "integer",
                    "description": "Nova quantidade em estoque."
                  }
                },
                "required": ["nome", "preco", "estoque"],
                "example": {
                  "nome": "Smartphone Pro",
                  "preco": 2499.99,
                  "estoque": 45
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Produto atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Produto atualizado com sucesso." }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID inválido ou dados do produto ausentes/inválidos.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "examples": {
                  "id_invalido": { "value": { "message": "ID inválido. Deve ser um número." } },
                  "campos_obrigatorios": { "value": { "message": "Nome, preço e estoque são obrigatórios." } },
                  "nome_invalido": { "value": { "message": "Nome deve ser uma string não vazia." } },
                  "preco_invalido": { "value": { "message": "Preço deve ser um número maior que zero." } },
                  "estoque_invalido": { "value": { "message": "Estoque deve ser um número inteiro não negativo." } }
                }
              }
            }
          },
          "404": {
            "description": "Produto não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "Produto não encontrado" }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deleta um produto",
        "tags": ["Produtos"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID do produto a ser deletado."
          }
        ],
        "responses": {
          "204": {
            "description": "Produto deletado com sucesso (No Content)."
          },
          "400": {
            "description": "ID inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "ID inválido. Deve ser um número." }
              }
            }
          },
          "404": {
            "description": "Produto não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "Produto não encontrado" }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/produtos/buscar": {
      "get": {
        "summary": "Busca produtos por nome (parcial)",
        "tags": ["Produtos"],
        "parameters": [
          {
            "in": "query",
            "name": "nome",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Nome ou parte do nome do produto para busca."
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de produtos encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Produto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parâmetro \"nome\" é obrigatório.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "Parâmetro \"nome\" é obrigatório para a busca." }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/vendas": {
      "get": {
        "summary": "Lista todas as vendas",
        "tags": ["Vendas"],
        "responses": {
          "200": {
            "description": "Lista de vendas recuperada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Venda"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Cria uma nova venda e subtrai do estoque do produto",
        "tags": ["Vendas"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cliente_id": {
                    "type": "integer",
                    "description": "ID do cliente associado à venda."
                  },
                  "produto_id": {
                    "type": "integer",
                    "description": "ID do produto vendido."
                  },
                  "quantidade": {
                    "type": "integer",
                    "description": "Quantidade do produto vendido."
                  }
                },
                "required": ["cliente_id", "produto_id", "quantidade"],
                "example": {
                  "cliente_id": 1,
                  "produto_id": 101,
                  "quantidade": 2
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Venda criada e estoque atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Venda"
                }
              }
            }
          },
          "400": {
            "description": "Dados da venda inválidos ou ausentes, ou **estoque insuficiente**.",
            "content": {
                "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            }
                        }
                    },
                    "examples": {
                      "dados_obrigatorios": { "value": { "message": "Cliente ID, Produto ID, Quantidade são obrigatórios." } },
                      "id_cliente_invalido": { "value": { "message": "Cliente ID deve ser um número inteiro positivo." } },
                      "id_produto_invalido": { "value": { "message": "Produto ID deve ser um número inteiro positivo." } },
                      "quantidade_invalida": { "value": { "message": "Quantidade deve ser um número inteiro positivo." } },
                      "estoque_insuficiente": { "value": { "message": "Estoque insuficiente para o produto \"NomeProduto\". Disponível: 10, Solicitado: 15." } }
                    }
                }
            }
          },
          "404": {
            "description": "Produto ou Cliente não encontrado.",
            "content": {
                "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            }
                        }
                    },
                    "examples": {
                      "produto_nao_encontrado": { "value": { "message": "Produto com ID 101 não encontrado." } },
                      "cliente_nao_encontrado": { "value": { "message": "Cliente com ID 1 não encontrado." } }
                    }
                }
            }
          },
          "500": {
            "description": "Falha interna do servidor ao processar a venda.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "Falha ao inserir a venda." }
              }
            }
          }
        }
      }
    },
    "/vendas/{id}": {
      "get": {
        "summary": "Busca uma venda por ID",
        "tags": ["Vendas"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID da venda a ser buscada."
          }
        ],
        "responses": {
          "200": {
            "description": "Venda encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Venda"
                }
              }
            }
          },
          "400": {
            "description": "ID inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "ID inválido. Deve ser um número." }
              }
            }
          },
          "404": {
            "description": "Venda não encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "Venda não encontrada" }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deleta uma venda",
        "tags": ["Vendas"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID da venda a ser deletada."
          }
        ],
        "responses": {
          "204": {
            "description": "Venda deletada com sucesso (No Content)."
          },
          "400": {
            "description": "ID inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "ID inválido. Deve ser um número." }
              }
            }
          },
          "404": {
            "description": "Venda não encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "Venda não encontrada" }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/vendas/cliente/{clienteId}": {
      "get": {
        "summary": "Busca todas as vendas de um cliente",
        "tags": ["Vendas"],
        "parameters": [
          {
            "in": "path",
            "name": "clienteId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID do cliente para buscar suas vendas."
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de vendas do cliente recuperada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Venda"
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID do cliente inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "ID inválido. Deve ser um número." }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/vendas/produto/{produtoId}": {
      "get": {
        "summary": "Lista a quantidade e valor total de vendas de um produto",
        "tags": ["Vendas"],
        "parameters": [
          {
            "in": "path",
            "name": "produtoId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID do produto para buscar seu sumário de vendas."
          }
        ],
        "responses": {
          "200": {
            "description": "Sumário de vendas do produto recuperado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "quantidade_total_vendida": {
                      "type": "integer",
                      "example": 15
                    },
                    "valor_total_vendas": {
                      "type": "number",
                      "format": "float",
                      "example": 750.50
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID do produto inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": { "message": "ID inválido. Deve ser um número." }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Cliente": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "ID único do cliente."
          },
          "nome": {
            "type": "string",
            "description": "Nome do cliente."
          }
        },
        "required": ["nome"]
      },
      "Produto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "ID único do produto."
          },
          "nome": {
            "type": "string",
            "description": "Nome do produto."
          },
          "preco": {
            "type": "number",
            "format": "float",
            "description": "Preço unitário do produto."
          },
          "estoque": {
            "type": "integer",
            "description": "Quantidade em estoque do produto."
          }
        },
        "required": ["nome", "preco", "estoque"]
      },
      "Venda": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "ID único da venda."
          },
          "cliente_id": {
            "type": "integer",
            "description": "ID do cliente que realizou a venda."
          },
          "produto_id": {
            "type": "integer",
            "description": "ID do produto vendido."
          },
          "quantidade": {
            "type": "integer",
            "description": "Quantidade do produto vendida."
          },
          "preco_unit": {
            "type": "number",
            "format": "float",
            "description": "Preço unitário do produto no momento da venda."
          },
          "data_venda": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "Data e hora da venda (formato ISO 8601)."
          }
        },
        "required": ["cliente_id", "produto_id", "quantidade"]
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem de erro."
          }
        },
        "required": ["message"]
      }
    }
  }
}